# MySQL connection
spring.datasource.url=jdbc:mysql://localhost:3306/expense_management?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
<<<<<<< HEAD
spring.datasource.password=
=======
spring.datasource.password=your pass
>>>>>>> a77d46d3bb4094629e6224485eba642b84362d00
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA + Hibernate
spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# JWT Configuration
<<<<<<< HEAD
app.jwtSecret=yoursecretkey
=======
app.jwtSecret=ur key
>>>>>>> a77d46d3bb4094629e6224485eba642b84362d00
app.jwtExpirationInMs=86400000

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.repair-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.clean-disabled=false
spring.flyway.clean-on-validation-error=true

<<<<<<< HEAD
=======
# Security Configuration
app.jwtSecret=ur key
app.jwtExpirationInMs=86400000

>>>>>>> a77d46d3bb4094629e6224485eba642b84362d00
# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Logging Configuration
logging.level.org.springframework.security=DEBUG
logging.level.com.expense.management=DEBUG

# Server Configuration
server.port=8080
server.servlet.context-path=/

<<<<<<< HEAD
# OAuth2 Configuration - Google
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
=======
# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=..
spring.security.oauth2.client.registration.google.client-secret=..
>>>>>>> a77d46d3bb4094629e6224485eba642b84362d00
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=sub

<<<<<<< HEAD
# OAuth2 Configuration - GitHub
spring.security.oauth2.client.registration.github.client-id=
spring.security.oauth2.client.registration.github.client-secret=747e5d9f6888bf2f686c5ba42609a30717e4bd13
=======
# GitHub OAuth2 Configuration
spring.security.oauth2.client.registration.github.client-id=..
spring.security.oauth2.client.registration.github.client-secret=..
>>>>>>> a77d46d3bb4094629e6224485eba642b84362d00
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/login/oauth2/code/github
spring.security.oauth2.client.registration.github.client-name=GitHub
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login
spring.security.oauth2.client.provider.github.user-email-uri=https://api.github.com/user/emails
#testing
